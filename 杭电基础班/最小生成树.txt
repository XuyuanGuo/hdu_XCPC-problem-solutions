#include<iostream>
#include<iomanip>
#include<cmath>
#include<algorithm>
using namespace std;

struct road{
    int city1;
    int city2;
    int distance;
}r[5001];

int bin[101];

int find(int x);
void merge(int a,int b);
bool cmp(road a,road b);

int main(){
    int N;
    while(cin>>N&&N!=0){
        int sum=0;
        for(int i=1;i<=N;i++){
            bin[i]=i;
        }
        for(int i=0;i<N*(N-1)/2;i++){
            cin>>r[i].city1>>r[i].city2>>r[i].distance;
        }
        sort(r,r+N*(N-1)/2,cmp);
        for(int i=0;i<N*(N-1)/2;i++){
            if(find(r[i].city1)!=find(r[i].city2)){
                merge(r[i].city1,r[i].city2);
                sum+=r[i].distance;
            }
        }
        cout<<sum<<endl;
    }
    return 0;
}

int find(int x){
    while(bin[x]!=x)
        x=bin[x];
    return x;
}

void merge(int a,int b){
    int fa=find(a);
    int fb=find(b);
    if(fa!=fb)
        bin[fa]=fb;
}

bool cmp(road a,road b){
    return a.distance<b.distance;
}