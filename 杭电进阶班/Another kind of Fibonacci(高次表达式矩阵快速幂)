#include<bits/stdc++.h>
using namespace std;

int m=10007,N=4;

struct mat{
    long long m[4][4];
}B;

mat multi(mat a,mat b){
    mat c;
    memset(c.m,0,sizeof(c.m));
    for(int i=0;i<N;i++){
        for(int k=0;k<N;k++){
            if(a.m[i][k]==0) continue;
            for(int j=0;j<N;j++){
                c.m[i][j]=(c.m[i][j]+(a.m[i][k]%m)*(b.m[k][j]%m))%m;
            }
        }
    }
    return c;
}

mat power(mat a,int k){
    mat res;
    memset(res.m,0,sizeof(res.m));
    for(int i=0;i<N;i++){
        res.m[i][i]=1;
    }
    if(k==0) return res;
    res=power(multi(a,a),k/2);
    if(k%2) res=multi(res,a);
    return res;
}

int main(){
    int n,ans0[4]={2,1,1,1};
    long long x,y;
    while(scanf("%d%lld%lld",&n,&x,&y)==3){
        memset(B.m,0,sizeof(B.m));
        B.m[0][0]=B.m[3][1]=1;
        B.m[0][1]=B.m[1][1]=x*x;
        B.m[0][2]=B.m[1][2]=2*x*y;
        B.m[0][3]=B.m[1][3]=y*y;
        B.m[2][1]=x;
        B.m[2][2]=y;
        mat Bn=power(B,n-1);
        long long ans=0;
        for(int i=0;i<N;i++){
            ans=(ans+Bn.m[0][i]*ans0[i])%m;
        }
        printf("%lld\n",ans);
    }
    return 0;
}